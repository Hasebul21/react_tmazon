#!/usr/bin/env sh
. "$(dirname -- "$0")/_/husky.sh"

message=$(cat "$1")
requiredPattern="^[A-Z]+-[0-9]+ [A-Z].+$"
anotherPattern="^(hotfix|bug|feature): [A-Z].+$"


# Check the format of the commit message
if ! echo "$message" | grep -qE "$requiredPattern" && ! echo "$message" | grep -qE "$anotherPattern"; then
  echo >&2 "-"
  echo >&2 "-"
  echo >&2 "-"
  echo >&2 "ğŸš¨ Wrong commit message! ğŸ˜•"
  echo >&2 "The commit message must have this format:"
  echo >&2 "<>"
  echo >&2 "-"
  echo >&2 "Your commit message was:"
  echo >&2 "$message"
  echo >&2 "-"
  echo >&2 "For more information, check script in .husky/commit-msg"
  echo >&2 "-"
  exit 1
fi

# Check the length of the commit message
if [ ${#message} -ge 30 ]; then
  echo >&2 "-"
  echo >&2 "-"
  echo >&2 "-"
  echo >&2 "ğŸš¨ Commit message is too long! ğŸ˜•"
  echo >&2 "The commit message must be less than 20 characters long."
  echo >&2 "-"
  echo >&2 "Your commit message was:"
  echo >&2 "$message"
  echo >&2 "-"
  echo >&2 "For more information, check script in .husky/commit-msg"
  echo >&2 "-"
  exit 1
fi

# If commit message format is correct, run lint-staged
npx lint-staged
